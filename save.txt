const { sessionId, proxy, records } = req.body;
    const proxyarray = proxy.split(",").map(item => item.trim());
    const stringArray = records.split("},").map(item => item.trim());

    console.log(proxyarray)
    const parseObjects = (arr) => {
        return arr.map(str => {
          // Clean up the string
          const cleanedStr = str
            .replace(/(\r\n|\n|\r)/gm, "")  // Remove newlines
            .replace(/(\s+)/g, " ")         // Remove multiple spaces
            .replace(/'/g, '"')             // Replace single quotes with double quotes
            .replace(/(\w+):/g, '"$1":')    // Add double quotes around keys
            .replace(/,\s*}/g, '}')         // Remove trailing commas before closing braces
            .replace(/,\s*}/g, '}');        // Ensure no trailing comma before closing brace
      
          // Add missing closing brace if needed
          const validStr = cleanedStr.endsWith('}') ? cleanedStr : cleanedStr + '}';
      
          try {
            // Parse the cleaned string into an object
            return JSON.parse(validStr);
          } catch (e) {
            console.error("Parsing error: ", e);
            return null;
          }
        }).filter(obj => obj !== null); // Filter out any parsing errors
      };
      
      // Parse the array of strings
      const objectArray = parseObjects(stringArray);
      
      console.log(objectArray);